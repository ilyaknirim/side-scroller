import { saveScore } from '../../systems/leaderboard.js';
import { createParticleEmitter } from '../../systems/particles.js';
import { GAME_WIDTH, GAME_HEIGHT } from '../../utils/constants.js';

export function runDemo(container,level={}){const canvas=document.createElement('canvas');canvas.width=GAME_WIDTH;canvas.height=GAME_HEIGHT;container.appendChild(canvas);const ctx=canvas.getContext('2d');let bird={x:80,y:canvas.height/2,vy:0,r:12};let score=0;const gravity=level.gravity || 0.5;const gap=level.gap || 140;const pipes=[];const speed=level.speed || 2.2;let frames=0;let running=true;function spawnPipe(){const top=40+Math.random()*(canvas.height/2);pipes.push({x:canvas.width,top,bottom:top+gap});}const modifiers=(level && level.modifiers)|| [];let invertTimer=0;function chaosTick(){if(modifiers.includes('Инверсия управления')&& Math.random()<0.002){invertTimer=60+Math.floor(Math.random()*120);}if(modifiers.includes('Гравитационные всплески')&& Math.random()<0.004){bird.vy+=(Math.random()*8-4);}if(invertTimer>0){invertTimer--;}}function update(){frames++;bird.vy+=gravity;bird.y+=bird.vy;if(frames % 90===0)spawnPipe();chaosTick();for(const p of pipes){p.x-=speed;}if(bird.y>canvas.height-bird.r){bird.y=canvas.height-bird.r;bird.vy=-6;}if(bird.y<bird.r){bird.y=bird.r;bird.vy=0;}while(pipes.length && pipes[0].x<-60)pipes.shift();}function draw(){
    ctx.fillStyle='white'; ctx.font='18px monospace'; ctx.fillText('Score: '+score, 10, 22);ctx.fillStyle='#071229';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#66f';ctx.beginPath();ctx.arc(bird.x,bird.y,bird.r,0,Math.PI*2);ctx.fill();ctx.fillStyle='#0a0';for(const p of pipes){ctx.fillRect(p.x,0,40,p.top);ctx.fillRect(p.x,p.bottom,40,canvas.height-p.bottom);}}function loop(){if(!running)return;update();draw();requestAnimationFrame(loop);}function flap(){if(invertTimer>0)bird.vy=8;else bird.vy=-8;}function onKey(e){if(e.code==='Space' || e.type==='pointerdown')flap();}window.addEventListener('keydown',onKey);canvas.addEventListener('pointerdown',onKey);loop();return{stop(){running=false;window.removeEventListener('keydown',onKey);canvas.removeEventListener('pointerdown',onKey);if(container.contains(canvas))container.removeChild(canvas);}};}
